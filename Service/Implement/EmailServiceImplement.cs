using ConsoleApp1.Config;
using ConsoleApp1.Service.Interface;
using System.Net;
using System.Net.Mail;
namespace ConsoleApp1.Service.Implement;
public class EmailServiceImplement : IEmailService
{
    private readonly EmailConfig _emailConfig;
    public EmailServiceImplement(EmailConfig emailConfig)
    {
        _emailConfig = emailConfig;
    }
    public async Task<bool> SendOtpEmailAsync(string toEmail, string otpCode)
    {
        try
        {
            var mailMessage = new MailMessage
            {
                From = new MailAddress(_emailConfig.FromEmail, _emailConfig.FromName),
                Subject = "M√£ OTP ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u",
                /*Body = CreateOtpEmailBody(otpCode),
                IsBodyHtml = true*/
            };
            mailMessage.To.Add(toEmail);
            using var smtpClient = new SmtpClient(_emailConfig.SmtpHost, _emailConfig.SmtpPort)
            {
                Credentials = new NetworkCredential(_emailConfig.FromEmail, _emailConfig.FromPassword),
                EnableSsl = _emailConfig.EnableSsl
            };
            await smtpClient.SendMailAsync(mailMessage);
            return true;
        }
        catch (Exception ex)
        {
            return false;
        }
    }
    public async Task<bool> SendWelcomeEmailAsync(string toEmail, string username)
    {
        try
        {
            var mailMessage = new MailMessage
            {
                From = new MailAddress(_emailConfig.FromEmail, _emailConfig.FromName),
                Subject = "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Quizizz!",
                /*Body = CreateWelcomeEmailBody(username),
                IsBodyHtml = true*/
            };
            mailMessage.To.Add(toEmail);
            using var smtpClient = new SmtpClient(_emailConfig.SmtpHost, _emailConfig.SmtpPort)
            {
                Credentials = new NetworkCredential(_emailConfig.FromEmail, _emailConfig.FromPassword),
                EnableSsl = _emailConfig.EnableSsl
            };
            await smtpClient.SendMailAsync(mailMessage);
            return true;
        }
        catch (Exception ex)
        {
            return false;
        }
    }
    /*private string CreateOtpEmailBody(string otpCode)
    {
        return $@"
        <html>
        <body style='font-family: Arial, sans-serif;'>
            <div style='max-width: 600px; margin: 0 auto; padding: 20px;'>
                <h2 style='color: #333;'>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u Quizizz</h2>
                <p>B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n Quizizz c·ªßa m√¨nh.</p>
                <div style='background-color: #f8f9fa; padding: 20px; border-radius: 5px; text-align: center; margin: 20px 0;'>
                    <h3 style='color: #007bff; font-size: 24px; margin: 0;'>M√£ OTP c·ªßa b·∫°n:</h3>
                    <h1 style='color: #007bff; font-size: 36px; margin: 10px 0; letter-spacing: 5px;'>{otpCode}</h1>
                </div>
                <p><strong>L∆∞u √Ω:</strong></p>
                <ul>
                    <li>M√£ OTP n√†y c√≥ hi·ªáu l·ª±c trong 5 ph√∫t</li>
                    <li>Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                    <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, h√£y b·ªè qua email n√†y</li>
                </ul>
                <hr style='margin: 30px 0;'>
                <p style='color: #666; font-size: 12px;'>
                    Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng Quizizz. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.
                </p>
            </div>
        </body>
        </html>";
    }
    private string CreateWelcomeEmailBody(string username)
    {
        return $@"
        <html>
        <body style='font-family: Arial, sans-serif;'>
            <div style='max-width: 600px; margin: 0 auto; padding: 20px;'>
                <h2 style='color: #333;'>Ch√†o m·ª´ng {username} ƒë·∫øn v·ªõi Quizizz! üéâ</h2>
                <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n Quizizz. B·∫°n ƒë√£ s·∫µn s√†ng ƒë·ªÉ:</p>
                <ul>
                    <li>üéÆ Tham gia c√°c tr√≤ ch∆°i quiz th√∫ v·ªã</li>
                    <li>üèÜ C·∫°nh tranh v·ªõi b·∫°n b√®</li>
                    <li>üìö H·ªçc t·∫≠p qua c√°c c√¢u h·ªèi ƒëa d·∫°ng</li>
                    <li>üéØ N√¢ng cao ki·∫øn th·ª©c c·ªßa b·∫£n th√¢n</li>
                </ul>
                <div style='text-align: center; margin: 30px 0;'>
                    <a href='#' style='background-color: #007bff; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; display: inline-block;'>
                        B·∫Øt ƒë·∫ßu ch∆°i ngay!
                    </a>
                </div>
                <p>Ch√∫c b·∫°n c√≥ nh·ªØng tr·∫£i nghi·ªám tuy·ªát v·ªùi c√πng Quizizz!</p>
                <hr style='margin: 30px 0;'>
                <p style='color: #666; font-size: 12px;'>
                    ƒê·ªôi ng≈© Quizizz<br>
                    Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng.
                </p>
            </div>
        </body>
        </html>";
    }*/
}
